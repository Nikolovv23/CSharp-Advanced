// Given a sequence consisting of parentheses, determine whether the expression is balanced. A sequence of parentheses is balanced, 
// if every open parenthesis can be paired uniquely with a closing parenthesis that occurs after the former. Also, the interval between them must be balanced.
// You will be given three types of parentheses: (, {, and[.
// {[()]}
//     -This is a balanced parenthesis.
// {[(])}
//     -This is not a balanced parenthesis.

//  Input:                   Output:
// {[()]}                    YES


namespace BalancedParenthesis
{
    internal class Program
    {
        static void Main(string[] args)
        {
            char[] parentheses = Console.ReadLine().ToArray(); 
            Stack <char> openedParentheses = new Stack<char>();
            if (parentheses.Length % 2 != 0)
            {
                Console.WriteLine("NO");
                return;
            }
            foreach (char c in parentheses)
            {
                if ("({[".Contains(c))
                {
                    openedParentheses.Push(c);
                }
                else if (c == ')' && openedParentheses.Peek() == '(') 
                {
                 openedParentheses.Pop();
                }
                else if (c == '}' && openedParentheses.Peek() == '{')
                {
                    openedParentheses.Pop();
                }
                else if (c == ']' && openedParentheses.Peek() == '[')
                {
                    openedParentheses.Pop();
                }
            }
            if (!openedParentheses.Any())
            {
                Console.WriteLine("YES");
            }
            else { Console.WriteLine("NO"); }
        }
    }
}
